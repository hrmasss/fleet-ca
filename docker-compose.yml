services:
  db:
    image: postgres:17.6-alpine3.22
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: oppora-backend:latest
    environment:
      SECRET_KEY: local-dev-secret-key
      DEBUG: "True"
      DATABASE_URL: "postgres://postgres:postgres@db:5432/postgres"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/api/common/health/"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 60s
    command: >-
      sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn --bind 0.0.0.0:8000 --workers 3 core.wsgi:application"
    restart: unless-stopped

  nginx:
    image: nginx:1.29.1-alpine
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
